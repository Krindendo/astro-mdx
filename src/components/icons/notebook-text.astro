---
import {
  NotebookText as Icon,
  X,
  Loader2,
  ChevronLeft,
  ChevronRight,
  SunMedium,
  Moon,
  Laptop,
  Check,
  Menu,
  Search,
  createElement,
} from "lucide";

interface Props extends astroHTML.JSX.SVGAttributes {
  size?: number;
}
// Test component
// extract and remove the size shortcut
const size = Astro.props.size;
delete Astro.props.size;

const menuIcon = createElement(Icon);

// allow the user's props to redefine our defaults
const props = Object.assign(
  {
    xmlns: "http://www.w3.org/2000/svg",
    "stroke-width": 2,
    width: size ?? 24,
    height: size ?? 24,
    stroke: "currentColor",
    "stroke-linecap": "round",
    "stroke-linejoin": "round",
    fill: "none",
    viewBox: "0 0 24 24",
  },
  Astro.props
);

// 2. Destructure the `attributes` and `children` array items
const [, attributes, children] = Icon;

// 3. Reduce children nodes to HTML string
const componentChildren = children
  ?.map(
    ([child, attributes]) =>
      `<${child} ${Object.entries(attributes)
        .map(([k, v]) => `${k}="${v}"`)
        .join(" ")} />`
  )
  .join("\n");
---

<menuIcon></menuIcon>

<svg {...attributes} set:html={componentChildren} />
